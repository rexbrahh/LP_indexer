// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: dex/sol/v1/core.proto

package dexsolv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type U128 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hi            uint64                 `protobuf:"varint,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo            uint64                 `protobuf:"varint,2,opt,name=lo,proto3" json:"lo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *U128) Reset() {
	*x = U128{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *U128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*U128) ProtoMessage() {}

func (x *U128) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use U128.ProtoReflect.Descriptor instead.
func (*U128) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{0}
}

func (x *U128) GetHi() uint64 {
	if x != nil {
		return x.Hi
	}
	return 0
}

func (x *U128) GetLo() uint64 {
	if x != nil {
		return x.Lo
	}
	return 0
}

type BlockHead struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Slot          uint64                 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	TsSec         uint64                 `protobuf:"varint,3,opt,name=ts_sec,json=tsSec,proto3" json:"ts_sec,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockHead) Reset() {
	*x = BlockHead{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHead) ProtoMessage() {}

func (x *BlockHead) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHead.ProtoReflect.Descriptor instead.
func (*BlockHead) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{1}
}

func (x *BlockHead) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *BlockHead) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BlockHead) GetTsSec() uint64 {
	if x != nil {
		return x.TsSec
	}
	return 0
}

func (x *BlockHead) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TxMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Slot          uint64                 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Sig           string                 `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	CuUsed        uint64                 `protobuf:"varint,5,opt,name=cu_used,json=cuUsed,proto3" json:"cu_used,omitempty"`
	CuPrice       uint64                 `protobuf:"varint,6,opt,name=cu_price,json=cuPrice,proto3" json:"cu_price,omitempty"`
	LogMsgs       []string               `protobuf:"bytes,7,rep,name=log_msgs,json=logMsgs,proto3" json:"log_msgs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxMeta) Reset() {
	*x = TxMeta{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxMeta) ProtoMessage() {}

func (x *TxMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxMeta.ProtoReflect.Descriptor instead.
func (*TxMeta) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{2}
}

func (x *TxMeta) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *TxMeta) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *TxMeta) GetSig() string {
	if x != nil {
		return x.Sig
	}
	return ""
}

func (x *TxMeta) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TxMeta) GetCuUsed() uint64 {
	if x != nil {
		return x.CuUsed
	}
	return 0
}

func (x *TxMeta) GetCuPrice() uint64 {
	if x != nil {
		return x.CuPrice
	}
	return 0
}

func (x *TxMeta) GetLogMsgs() []string {
	if x != nil {
		return x.LogMsgs
	}
	return nil
}

type SwapEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ChainId          uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Slot             uint64                 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Sig              string                 `protobuf:"bytes,3,opt,name=sig,proto3" json:"sig,omitempty"`
	Index            uint32                 `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	ProgramId        string                 `protobuf:"bytes,5,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	PoolId           string                 `protobuf:"bytes,6,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	MintBase         string                 `protobuf:"bytes,7,opt,name=mint_base,json=mintBase,proto3" json:"mint_base,omitempty"`
	MintQuote        string                 `protobuf:"bytes,8,opt,name=mint_quote,json=mintQuote,proto3" json:"mint_quote,omitempty"`
	DecBase          uint32                 `protobuf:"varint,9,opt,name=dec_base,json=decBase,proto3" json:"dec_base,omitempty"`
	DecQuote         uint32                 `protobuf:"varint,10,opt,name=dec_quote,json=decQuote,proto3" json:"dec_quote,omitempty"`
	BaseIn           uint64                 `protobuf:"varint,11,opt,name=base_in,json=baseIn,proto3" json:"base_in,omitempty"`
	BaseOut          uint64                 `protobuf:"varint,12,opt,name=base_out,json=baseOut,proto3" json:"base_out,omitempty"`
	QuoteIn          uint64                 `protobuf:"varint,13,opt,name=quote_in,json=quoteIn,proto3" json:"quote_in,omitempty"`
	QuoteOut         uint64                 `protobuf:"varint,14,opt,name=quote_out,json=quoteOut,proto3" json:"quote_out,omitempty"`
	SqrtPriceQ64Pre  uint64                 `protobuf:"varint,15,opt,name=sqrt_price_q64_pre,json=sqrtPriceQ64Pre,proto3" json:"sqrt_price_q64_pre,omitempty"`
	SqrtPriceQ64Post uint64                 `protobuf:"varint,16,opt,name=sqrt_price_q64_post,json=sqrtPriceQ64Post,proto3" json:"sqrt_price_q64_post,omitempty"`
	ReservesBase     uint64                 `protobuf:"varint,17,opt,name=reserves_base,json=reservesBase,proto3" json:"reserves_base,omitempty"`
	ReservesQuote    uint64                 `protobuf:"varint,18,opt,name=reserves_quote,json=reservesQuote,proto3" json:"reserves_quote,omitempty"`
	FeeBps           uint32                 `protobuf:"varint,19,opt,name=fee_bps,json=feeBps,proto3" json:"fee_bps,omitempty"`
	Provisional      bool                   `protobuf:"varint,20,opt,name=provisional,proto3" json:"provisional,omitempty"`
	IsUndo           bool                   `protobuf:"varint,21,opt,name=is_undo,json=isUndo,proto3" json:"is_undo,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SwapEvent) Reset() {
	*x = SwapEvent{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapEvent) ProtoMessage() {}

func (x *SwapEvent) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapEvent.ProtoReflect.Descriptor instead.
func (*SwapEvent) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{3}
}

func (x *SwapEvent) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *SwapEvent) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SwapEvent) GetSig() string {
	if x != nil {
		return x.Sig
	}
	return ""
}

func (x *SwapEvent) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SwapEvent) GetProgramId() string {
	if x != nil {
		return x.ProgramId
	}
	return ""
}

func (x *SwapEvent) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *SwapEvent) GetMintBase() string {
	if x != nil {
		return x.MintBase
	}
	return ""
}

func (x *SwapEvent) GetMintQuote() string {
	if x != nil {
		return x.MintQuote
	}
	return ""
}

func (x *SwapEvent) GetDecBase() uint32 {
	if x != nil {
		return x.DecBase
	}
	return 0
}

func (x *SwapEvent) GetDecQuote() uint32 {
	if x != nil {
		return x.DecQuote
	}
	return 0
}

func (x *SwapEvent) GetBaseIn() uint64 {
	if x != nil {
		return x.BaseIn
	}
	return 0
}

func (x *SwapEvent) GetBaseOut() uint64 {
	if x != nil {
		return x.BaseOut
	}
	return 0
}

func (x *SwapEvent) GetQuoteIn() uint64 {
	if x != nil {
		return x.QuoteIn
	}
	return 0
}

func (x *SwapEvent) GetQuoteOut() uint64 {
	if x != nil {
		return x.QuoteOut
	}
	return 0
}

func (x *SwapEvent) GetSqrtPriceQ64Pre() uint64 {
	if x != nil {
		return x.SqrtPriceQ64Pre
	}
	return 0
}

func (x *SwapEvent) GetSqrtPriceQ64Post() uint64 {
	if x != nil {
		return x.SqrtPriceQ64Post
	}
	return 0
}

func (x *SwapEvent) GetReservesBase() uint64 {
	if x != nil {
		return x.ReservesBase
	}
	return 0
}

func (x *SwapEvent) GetReservesQuote() uint64 {
	if x != nil {
		return x.ReservesQuote
	}
	return 0
}

func (x *SwapEvent) GetFeeBps() uint32 {
	if x != nil {
		return x.FeeBps
	}
	return 0
}

func (x *SwapEvent) GetProvisional() bool {
	if x != nil {
		return x.Provisional
	}
	return false
}

func (x *SwapEvent) GetIsUndo() bool {
	if x != nil {
		return x.IsUndo
	}
	return false
}

type PoolSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Slot          uint64                 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	PoolId        string                 `protobuf:"bytes,3,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	MintBase      string                 `protobuf:"bytes,4,opt,name=mint_base,json=mintBase,proto3" json:"mint_base,omitempty"`
	MintQuote     string                 `protobuf:"bytes,5,opt,name=mint_quote,json=mintQuote,proto3" json:"mint_quote,omitempty"`
	SqrtPriceQ64  uint64                 `protobuf:"varint,6,opt,name=sqrt_price_q64,json=sqrtPriceQ64,proto3" json:"sqrt_price_q64,omitempty"`
	ReservesBase  uint64                 `protobuf:"varint,7,opt,name=reserves_base,json=reservesBase,proto3" json:"reserves_base,omitempty"`
	ReservesQuote uint64                 `protobuf:"varint,8,opt,name=reserves_quote,json=reservesQuote,proto3" json:"reserves_quote,omitempty"`
	FeeBps        uint32                 `protobuf:"varint,9,opt,name=fee_bps,json=feeBps,proto3" json:"fee_bps,omitempty"`
	Liquidity     uint64                 `protobuf:"varint,10,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolSnapshot) Reset() {
	*x = PoolSnapshot{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSnapshot) ProtoMessage() {}

func (x *PoolSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSnapshot.ProtoReflect.Descriptor instead.
func (*PoolSnapshot) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{4}
}

func (x *PoolSnapshot) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *PoolSnapshot) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *PoolSnapshot) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *PoolSnapshot) GetMintBase() string {
	if x != nil {
		return x.MintBase
	}
	return ""
}

func (x *PoolSnapshot) GetMintQuote() string {
	if x != nil {
		return x.MintQuote
	}
	return ""
}

func (x *PoolSnapshot) GetSqrtPriceQ64() uint64 {
	if x != nil {
		return x.SqrtPriceQ64
	}
	return 0
}

func (x *PoolSnapshot) GetReservesBase() uint64 {
	if x != nil {
		return x.ReservesBase
	}
	return 0
}

func (x *PoolSnapshot) GetReservesQuote() uint64 {
	if x != nil {
		return x.ReservesQuote
	}
	return 0
}

func (x *PoolSnapshot) GetFeeBps() uint32 {
	if x != nil {
		return x.FeeBps
	}
	return 0
}

func (x *PoolSnapshot) GetLiquidity() uint64 {
	if x != nil {
		return x.Liquidity
	}
	return 0
}

type Candle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	PairId        string                 `protobuf:"bytes,2,opt,name=pair_id,json=pairId,proto3" json:"pair_id,omitempty"`
	PoolId        string                 `protobuf:"bytes,3,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	Timeframe     string                 `protobuf:"bytes,4,opt,name=timeframe,proto3" json:"timeframe,omitempty"`
	WindowStart   uint64                 `protobuf:"varint,5,opt,name=window_start,json=windowStart,proto3" json:"window_start,omitempty"`
	Provisional   bool                   `protobuf:"varint,6,opt,name=provisional,proto3" json:"provisional,omitempty"`
	IsCorrection  bool                   `protobuf:"varint,7,opt,name=is_correction,json=isCorrection,proto3" json:"is_correction,omitempty"`
	OpenPxQ32     int64                  `protobuf:"varint,10,opt,name=open_px_q32,json=openPxQ32,proto3" json:"open_px_q32,omitempty"`
	HighPxQ32     int64                  `protobuf:"varint,11,opt,name=high_px_q32,json=highPxQ32,proto3" json:"high_px_q32,omitempty"`
	LowPxQ32      int64                  `protobuf:"varint,12,opt,name=low_px_q32,json=lowPxQ32,proto3" json:"low_px_q32,omitempty"`
	ClosePxQ32    int64                  `protobuf:"varint,13,opt,name=close_px_q32,json=closePxQ32,proto3" json:"close_px_q32,omitempty"`
	VwapNum       *U128                  `protobuf:"bytes,14,opt,name=vwap_num,json=vwapNum,proto3" json:"vwap_num,omitempty"`
	VwapDen       *U128                  `protobuf:"bytes,15,opt,name=vwap_den,json=vwapDen,proto3" json:"vwap_den,omitempty"`
	VolBase       *U128                  `protobuf:"bytes,16,opt,name=vol_base,json=volBase,proto3" json:"vol_base,omitempty"`
	VolQuote      *U128                  `protobuf:"bytes,17,opt,name=vol_quote,json=volQuote,proto3" json:"vol_quote,omitempty"`
	Trades        uint32                 `protobuf:"varint,18,opt,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Candle) Reset() {
	*x = Candle{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{5}
}

func (x *Candle) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Candle) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

func (x *Candle) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *Candle) GetTimeframe() string {
	if x != nil {
		return x.Timeframe
	}
	return ""
}

func (x *Candle) GetWindowStart() uint64 {
	if x != nil {
		return x.WindowStart
	}
	return 0
}

func (x *Candle) GetProvisional() bool {
	if x != nil {
		return x.Provisional
	}
	return false
}

func (x *Candle) GetIsCorrection() bool {
	if x != nil {
		return x.IsCorrection
	}
	return false
}

func (x *Candle) GetOpenPxQ32() int64 {
	if x != nil {
		return x.OpenPxQ32
	}
	return 0
}

func (x *Candle) GetHighPxQ32() int64 {
	if x != nil {
		return x.HighPxQ32
	}
	return 0
}

func (x *Candle) GetLowPxQ32() int64 {
	if x != nil {
		return x.LowPxQ32
	}
	return 0
}

func (x *Candle) GetClosePxQ32() int64 {
	if x != nil {
		return x.ClosePxQ32
	}
	return 0
}

func (x *Candle) GetVwapNum() *U128 {
	if x != nil {
		return x.VwapNum
	}
	return nil
}

func (x *Candle) GetVwapDen() *U128 {
	if x != nil {
		return x.VwapDen
	}
	return nil
}

func (x *Candle) GetVolBase() *U128 {
	if x != nil {
		return x.VolBase
	}
	return nil
}

func (x *Candle) GetVolQuote() *U128 {
	if x != nil {
		return x.VolQuote
	}
	return nil
}

func (x *Candle) GetTrades() uint32 {
	if x != nil {
		return x.Trades
	}
	return 0
}

type WalletHeuristics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       uint64                 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Wallet        string                 `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	FirstSeenSlot uint64                 `protobuf:"varint,3,opt,name=first_seen_slot,json=firstSeenSlot,proto3" json:"first_seen_slot,omitempty"`
	Swaps_24H     uint32                 `protobuf:"varint,4,opt,name=swaps_24h,json=swaps24h,proto3" json:"swaps_24h,omitempty"`
	Swaps_7D      uint32                 `protobuf:"varint,5,opt,name=swaps_7d,json=swaps7d,proto3" json:"swaps_7d,omitempty"`
	IsFresh       bool                   `protobuf:"varint,6,opt,name=is_fresh,json=isFresh,proto3" json:"is_fresh,omitempty"`
	IsSniper      bool                   `protobuf:"varint,7,opt,name=is_sniper,json=isSniper,proto3" json:"is_sniper,omitempty"`
	BundledPct    float32                `protobuf:"fixed32,8,opt,name=bundled_pct,json=bundledPct,proto3" json:"bundled_pct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletHeuristics) Reset() {
	*x = WalletHeuristics{}
	mi := &file_dex_sol_v1_core_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletHeuristics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletHeuristics) ProtoMessage() {}

func (x *WalletHeuristics) ProtoReflect() protoreflect.Message {
	mi := &file_dex_sol_v1_core_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletHeuristics.ProtoReflect.Descriptor instead.
func (*WalletHeuristics) Descriptor() ([]byte, []int) {
	return file_dex_sol_v1_core_proto_rawDescGZIP(), []int{6}
}

func (x *WalletHeuristics) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *WalletHeuristics) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *WalletHeuristics) GetFirstSeenSlot() uint64 {
	if x != nil {
		return x.FirstSeenSlot
	}
	return 0
}

func (x *WalletHeuristics) GetSwaps_24H() uint32 {
	if x != nil {
		return x.Swaps_24H
	}
	return 0
}

func (x *WalletHeuristics) GetSwaps_7D() uint32 {
	if x != nil {
		return x.Swaps_7D
	}
	return 0
}

func (x *WalletHeuristics) GetIsFresh() bool {
	if x != nil {
		return x.IsFresh
	}
	return false
}

func (x *WalletHeuristics) GetIsSniper() bool {
	if x != nil {
		return x.IsSniper
	}
	return false
}

func (x *WalletHeuristics) GetBundledPct() float32 {
	if x != nil {
		return x.BundledPct
	}
	return 0
}

var File_dex_sol_v1_core_proto protoreflect.FileDescriptor

const file_dex_sol_v1_core_proto_rawDesc = "" +
	"\n" +
	"\x15dex/sol/v1/core.proto\x12\n" +
	"dex.sol.v1\"&\n" +
	"\x04U128\x12\x0e\n" +
	"\x02hi\x18\x01 \x01(\x04R\x02hi\x12\x0e\n" +
	"\x02lo\x18\x02 \x01(\x04R\x02lo\"i\n" +
	"\tBlockHead\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x04R\achainId\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x04R\x04slot\x12\x15\n" +
	"\x06ts_sec\x18\x03 \x01(\x04R\x05tsSec\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\xb2\x01\n" +
	"\x06TxMeta\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x04R\achainId\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x04R\x04slot\x12\x10\n" +
	"\x03sig\x18\x03 \x01(\tR\x03sig\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12\x17\n" +
	"\acu_used\x18\x05 \x01(\x04R\x06cuUsed\x12\x19\n" +
	"\bcu_price\x18\x06 \x01(\x04R\acuPrice\x12\x19\n" +
	"\blog_msgs\x18\a \x03(\tR\alogMsgs\"\xf6\x04\n" +
	"\tSwapEvent\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x04R\achainId\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x04R\x04slot\x12\x10\n" +
	"\x03sig\x18\x03 \x01(\tR\x03sig\x12\x14\n" +
	"\x05index\x18\x04 \x01(\rR\x05index\x12\x1d\n" +
	"\n" +
	"program_id\x18\x05 \x01(\tR\tprogramId\x12\x17\n" +
	"\apool_id\x18\x06 \x01(\tR\x06poolId\x12\x1b\n" +
	"\tmint_base\x18\a \x01(\tR\bmintBase\x12\x1d\n" +
	"\n" +
	"mint_quote\x18\b \x01(\tR\tmintQuote\x12\x19\n" +
	"\bdec_base\x18\t \x01(\rR\adecBase\x12\x1b\n" +
	"\tdec_quote\x18\n" +
	" \x01(\rR\bdecQuote\x12\x17\n" +
	"\abase_in\x18\v \x01(\x04R\x06baseIn\x12\x19\n" +
	"\bbase_out\x18\f \x01(\x04R\abaseOut\x12\x19\n" +
	"\bquote_in\x18\r \x01(\x04R\aquoteIn\x12\x1b\n" +
	"\tquote_out\x18\x0e \x01(\x04R\bquoteOut\x12+\n" +
	"\x12sqrt_price_q64_pre\x18\x0f \x01(\x04R\x0fsqrtPriceQ64Pre\x12-\n" +
	"\x13sqrt_price_q64_post\x18\x10 \x01(\x04R\x10sqrtPriceQ64Post\x12#\n" +
	"\rreserves_base\x18\x11 \x01(\x04R\freservesBase\x12%\n" +
	"\x0ereserves_quote\x18\x12 \x01(\x04R\rreservesQuote\x12\x17\n" +
	"\afee_bps\x18\x13 \x01(\rR\x06feeBps\x12 \n" +
	"\vprovisional\x18\x14 \x01(\bR\vprovisional\x12\x17\n" +
	"\ais_undo\x18\x15 \x01(\bR\x06isUndo\"\xbb\x02\n" +
	"\fPoolSnapshot\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x04R\achainId\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x04R\x04slot\x12\x17\n" +
	"\apool_id\x18\x03 \x01(\tR\x06poolId\x12\x1b\n" +
	"\tmint_base\x18\x04 \x01(\tR\bmintBase\x12\x1d\n" +
	"\n" +
	"mint_quote\x18\x05 \x01(\tR\tmintQuote\x12$\n" +
	"\x0esqrt_price_q64\x18\x06 \x01(\x04R\fsqrtPriceQ64\x12#\n" +
	"\rreserves_base\x18\a \x01(\x04R\freservesBase\x12%\n" +
	"\x0ereserves_quote\x18\b \x01(\x04R\rreservesQuote\x12\x17\n" +
	"\afee_bps\x18\t \x01(\rR\x06feeBps\x12\x1c\n" +
	"\tliquidity\x18\n" +
	" \x01(\x04R\tliquidity\"\xab\x04\n" +
	"\x06Candle\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x04R\achainId\x12\x17\n" +
	"\apair_id\x18\x02 \x01(\tR\x06pairId\x12\x17\n" +
	"\apool_id\x18\x03 \x01(\tR\x06poolId\x12\x1c\n" +
	"\ttimeframe\x18\x04 \x01(\tR\ttimeframe\x12!\n" +
	"\fwindow_start\x18\x05 \x01(\x04R\vwindowStart\x12 \n" +
	"\vprovisional\x18\x06 \x01(\bR\vprovisional\x12#\n" +
	"\ris_correction\x18\a \x01(\bR\fisCorrection\x12\x1e\n" +
	"\vopen_px_q32\x18\n" +
	" \x01(\x03R\topenPxQ32\x12\x1e\n" +
	"\vhigh_px_q32\x18\v \x01(\x03R\thighPxQ32\x12\x1c\n" +
	"\n" +
	"low_px_q32\x18\f \x01(\x03R\blowPxQ32\x12 \n" +
	"\fclose_px_q32\x18\r \x01(\x03R\n" +
	"closePxQ32\x12+\n" +
	"\bvwap_num\x18\x0e \x01(\v2\x10.dex.sol.v1.U128R\avwapNum\x12+\n" +
	"\bvwap_den\x18\x0f \x01(\v2\x10.dex.sol.v1.U128R\avwapDen\x12+\n" +
	"\bvol_base\x18\x10 \x01(\v2\x10.dex.sol.v1.U128R\avolBase\x12-\n" +
	"\tvol_quote\x18\x11 \x01(\v2\x10.dex.sol.v1.U128R\bvolQuote\x12\x16\n" +
	"\x06trades\x18\x12 \x01(\rR\x06trades\"\xfe\x01\n" +
	"\x10WalletHeuristics\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\x04R\achainId\x12\x16\n" +
	"\x06wallet\x18\x02 \x01(\tR\x06wallet\x12&\n" +
	"\x0ffirst_seen_slot\x18\x03 \x01(\x04R\rfirstSeenSlot\x12\x1b\n" +
	"\tswaps_24h\x18\x04 \x01(\rR\bswaps24h\x12\x19\n" +
	"\bswaps_7d\x18\x05 \x01(\rR\aswaps7d\x12\x19\n" +
	"\bis_fresh\x18\x06 \x01(\bR\aisFresh\x12\x1b\n" +
	"\tis_sniper\x18\a \x01(\bR\bisSniper\x12\x1f\n" +
	"\vbundled_pct\x18\b \x01(\x02R\n" +
	"bundledPctB;Z9github.com/rexbrahh/lp-indexer/gen/go/dex/sol/v1;dexsolv1b\x06proto3"

var (
	file_dex_sol_v1_core_proto_rawDescOnce sync.Once
	file_dex_sol_v1_core_proto_rawDescData []byte
)

func file_dex_sol_v1_core_proto_rawDescGZIP() []byte {
	file_dex_sol_v1_core_proto_rawDescOnce.Do(func() {
		file_dex_sol_v1_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dex_sol_v1_core_proto_rawDesc), len(file_dex_sol_v1_core_proto_rawDesc)))
	})
	return file_dex_sol_v1_core_proto_rawDescData
}

var file_dex_sol_v1_core_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_dex_sol_v1_core_proto_goTypes = []any{
	(*U128)(nil),             // 0: dex.sol.v1.U128
	(*BlockHead)(nil),        // 1: dex.sol.v1.BlockHead
	(*TxMeta)(nil),           // 2: dex.sol.v1.TxMeta
	(*SwapEvent)(nil),        // 3: dex.sol.v1.SwapEvent
	(*PoolSnapshot)(nil),     // 4: dex.sol.v1.PoolSnapshot
	(*Candle)(nil),           // 5: dex.sol.v1.Candle
	(*WalletHeuristics)(nil), // 6: dex.sol.v1.WalletHeuristics
}
var file_dex_sol_v1_core_proto_depIdxs = []int32{
	0, // 0: dex.sol.v1.Candle.vwap_num:type_name -> dex.sol.v1.U128
	0, // 1: dex.sol.v1.Candle.vwap_den:type_name -> dex.sol.v1.U128
	0, // 2: dex.sol.v1.Candle.vol_base:type_name -> dex.sol.v1.U128
	0, // 3: dex.sol.v1.Candle.vol_quote:type_name -> dex.sol.v1.U128
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_dex_sol_v1_core_proto_init() }
func file_dex_sol_v1_core_proto_init() {
	if File_dex_sol_v1_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dex_sol_v1_core_proto_rawDesc), len(file_dex_sol_v1_core_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dex_sol_v1_core_proto_goTypes,
		DependencyIndexes: file_dex_sol_v1_core_proto_depIdxs,
		MessageInfos:      file_dex_sol_v1_core_proto_msgTypes,
	}.Build()
	File_dex_sol_v1_core_proto = out.File
	file_dex_sol_v1_core_proto_goTypes = nil
	file_dex_sol_v1_core_proto_depIdxs = nil
}
